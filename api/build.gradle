plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.hibernate.orm' version '6.1.7.Final'
	id 'org.graalvm.buildtools.native' version '0.9.20'
}

sourceCompatibility = '20'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	implementation.exclude module: 'spring-boot-starter-tomcat'
}


repositories {
	mavenCentral()
}

ext {
	set("jakarta-servlet.version", '5.0.0')
}

dependencies {
	implementation project(':common')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.mongodb:bson:4.8.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	implementation ('org.eclipse.jetty.http3:http3-server:11.0.15') {
//		exclude module: 'jetty-slf4j-impl'
//	}

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.eclipse.jetty:jetty-server:11.0.14'
	testImplementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

hibernate {
	enhancement {
		lazyInitialization true
		dirtyTracking true
		associationManagement true
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += "--enable-preview"
}

